{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showDetails","handleDetails","setState","event","this","props","eventStart","moment","start","dateTime","format","Row","className","Col","Card","Title","summary","timeZone","location","description","Button","variant","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","placeholder","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","e","updateEventsLength","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","href","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","defaultCity","eventCount","locationEvents","slice","mounted","defaultLocation","inputValue","Container","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5215f147.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Row, Col, Button } from 'react-bootstrap';\nimport moment from 'moment';\n\nclass Event extends Component {\n\n  state = {\n    showDetails: false\n  }\n\n  handleDetails = () => {\n    if (this.state.showDetails === true) {\n      this.setState({ showDetails: false });\n    } else {\n      this.setState({ showDetails: true });\n    }\n  };\n\n  render() {\n    const { event } = this.props;\n\n    const eventStart = moment(event.start.dateTime).format('MMMM Do YYYY, h:mm a');\n\n    return (\n\n      <Row className=\"justify-content-md-center bg-dark \">\n        <Col >\n          <Card className=\"event m-3\">\n            <Card.Title className=\"name\">{event.summary}</Card.Title>\n            <p className=\"event-start\"><b>Event Start Time:</b> {`${eventStart}`}</p>\n            <p className=\"event-start__timezone\"><b>Time Zone:</b> {event.start.timeZone} </p>\n            <p className=\"locations\"><b>Location:</b> {event.location}</p>\n\n            {\n              this.state.showDetails && (\n                <div className=\"show-event\">\n                  <h5><b>Event Details:</b></h5>\n                  <p className=\"description\">{event.description}</p>\n                </div>\n              )\n            }\n            <div className=\"event-button\">\n              <Button\n                className='details-btn '\n                variant=\"dark\"\n                onClick={() => this.handleDetails()}>\n                {!this.state.showDetails ? 'Show Details' : 'Hide Details'}\n              </Button>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Event;\n\n\n// const { event } = this.props;\n//     return (\n//       <div className=\"event-details\">\n//         <h1 className=\"name\">{event.summary}</h1>\n//         <p>{event.start.dateTime}</p>\n//         <p className=\"location\">{event.location}</p>\n//         {this.state.showHideDetails && (\n//           <div className='event-details'>\n//             <h2>About event:</h2>\n//             <p>{event.description}</p>\n//           </div>\n//         )}\n\n//         <button\n//           className='event-button'\n//           onClick={() => this.handleShowHideButton()}>\n//           {!this.state.showHideDetails ? 'Show Details' : 'Hide Details'}\n//         </button>\n//       </div>\n//     );\n//   }\n// }","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"event-list\">\n        {events.map(event =>\n          <li key={event.id} className=\"event-list-item\">\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          placeholder=\"Search for a City\"\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }} />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key={'all'} onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    numberOfEvents: 32,\n    // errorText: ''\n  }\n\n  handleInputChanged = (e) => {\n    const value = e.target.value;\n    if (value < 1) {\n      return this.setState({\n        numberOfEvents: '',\n        // errorText: 'Enter a number between 1 and 32'\n      });\n    } else if (value > 32) {\n      this.setState({\n        numberOfEvents: '',\n        // errorText: 'Enter a number between 1 and 32'\n      });\n    } else {\n      this.setState({\n        numberOfEvents: value,\n        // errorText: ''\n      })\n      this.props.updateEventsLength(value)\n    }\n  };\n\n  // resetInput = (e) => {\n  //   e.target.value = '';\n  // }\n\n  render() {\n\n    return (\n      <div className=\"numberOfEvents\">\n        <label className=\"eventsInput\">Number of Events</label>\n        <input\n          type=\"number\"\n          className=\"numberInput\"\n          placeholder=\"Enter Number of Events\"\n          value={this.state.numberOfEvents}\n          onChange={(e) => this.handleInputChanged(e)}\n        // onFocus={(e) => this.resetInput(e)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n\n];\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://qibu1qiz41.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://qibu1qiz41.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://qibu1qiz41.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './nprogress.css';\nimport { Container } from 'react-bootstrap';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    defaultCity: 'all',\n  }\n\n  updateEvents = (location, eventCount) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ? events.slice(0, this.state.numberOfEvents) :\n        events.filter((event) => event.location === location);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents.slice(0, eventCount),\n          defaultLocation: location\n        });\n      }\n    });\n  }\n\n  updateEventsLength(inputValue) {\n    this.setState({\n      numberOfEvents: inputValue\n    });\n    const { defaultCity } = this.state\n    this.updateEvents(defaultCity, inputValue);\n  }\n\n  componentDidMount() {\n    const { numberOfEvents } = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEventsLength={(value) => this.updateEventsLength(value)} />\n        <EventList events={this.state.events} />\n      </Container>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}